attack_technique: T1057
display_name: Process Discovery
atomic_tests:
- name: Process Discovery - ps
  auto_generated_guid: 4ff64f0b-aaf2-4866-b39d-38d9791407cc
  description: |
    Utilize ps to identify processes.

    Upon successful execution, sh will execute ps and output to /tmp/loot.txt.
  supported_platforms:
  - macos
  - linux
  input_arguments:
    output_file:
      description: path of output file
      type: path
      default: /tmp/loot.txt
  executor:
    command: |
      ps >> #{output_file}
      ps aux >> #{output_file}
    cleanup_command: |
      rm #{output_file}
    name: sh
- name: Process Discovery - tasklist
  auto_generated_guid: c5806a4f-62b8-4900-980b-c7ec004e9908
  description: |
    Utilize tasklist to identify processes.

    Upon successful execution, cmd.exe will execute tasklist.exe to list processes. Output will be via stdout. 
  supported_platforms:
  - windows
  executor:
    command: |
      tasklist
    name: command_prompt
- name: Process Discovery - Get-Process
  description: |
    Utilize Get-Process PowerShell cmdlet to identify processes.

    Upon successful execution, powershell.exe will execute Get-Process to list processes. Output will be via stdout. 
  supported_platforms:
  - windows
  executor:
    command: |
      Get-Process
    name: powershell
- name: Process Discovery - get-wmiObject
  description: |
    Utilize get-wmiObject PowerShell cmdlet to identify processes.

    Upon successful execution, powershell.exe will execute get-wmiObject to list processes. Output will be via stdout. 
  supported_platforms:
  - windows
  executor:
    command: |
      get-wmiObject -class Win32_Process
    name: powershell
- name: Process Discovery - wmic process
  description: |
    Utilize windows management instrumentation to identify processes.

    Upon successful execution, WMIC will execute process to list processes. Output will be via stdout. 
  supported_platforms:
  - windows
  executor:
    command: |
      wmic process get /format:list
    name: command_prompt